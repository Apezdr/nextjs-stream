.controls {
    /*
     * These CSS variables are supported out of the box to easily apply offsets to all popups.
     * You can also offset via props on `Tooltip.Content`, `Menu.Content`, and slider previews.
     */
    --media-tooltip-y-offset: 30px;
    --media-menu-y-offset: 30px;
}
  
.controls :global(.volume-slider) {
    --media-slider-preview-offset: 30px;
    margin-left: 1.5px;
}

.captions:global, .audio:global, .videoquality:global {
    position: sticky;
}

.captions {
    top: -0.675rem !important
}
.audio {
    top: 1.95rem !important
}
.videoquality {
    top: 4.6rem !important
}
.captions [data-open] {
    top: -0.675rem !important
}
.audio [data-open] {
    top: 1.95rem !important
}
.videoquality [data-open] {
    top: 4.6rem !important
}

.splitbg {
    @apply flex items-center content-center;
    background: linear-gradient(to right, rgba(255, 255, 255, 0.5) 2%, rgba(0, 0, 0, 0.25) 98%);
}
  
.splitleft, .splitright {
    @apply text-center flex-1;
}

.radio[data-checked]{
    @apply bg-gray-900;
}

:where(.vds-chapters-radio-group .vds-chapter-radio-start-time) {
    display: inline-block;
    padding: var(--media-chapters-start-time-padding, 1px 4px);
    letter-spacing: var(--media-chapters-start-time-letter-spacing, .4px);
    border-radius: var(--media-chapters-start-time-border-radius, 2px);
    color: var(--media-chapters-start-time-color, rgb(168, 169, 171));
    font-size: var(--media-chapters-start-time-font-size, 12px);
    font-weight: var(--media-chapters-start-time-font-weight, 500);
    background-color: var(--media-chapters-start-time-bg, rgb(156 163 175 / .2));
    margin-top: var(--media-chapters-start-time-gap, 6px);
}

:where(.vds-radio) {
    position: relative;
    align-items: center;
    border-radius: 2px;
    box-sizing: border-box;
    cursor: pointer;
    display: flex;
    font-family: var(--media-font-family, sans-serif);
    font-size: 15px;
    font-weight: 500;
    contain: content;
    padding: var(--media-menu-item-padding, 12px);
}

:where(.vds-chapter-radio-content) {
    display: flex;
    align-items: flex-start;
    flex-direction: column;
}

:where(.vds-menu-items:has(.vds-chapters-radio-group[data-thumbnails])) {
    min-width: var(--media-chapters-with-thumbnails-min-width, 350px);
}

.vds-chapters-radio-group :where(.vds-thumbnail) {
    margin-right: var(--media-chapters-thumbnail-gap, 12px);
    flex-shrink: 0;
    min-width: var(--media-chapters-thumbnail-min-width, 100px);
    min-height: var(--media-chapters-thumbnail-min-height, 56px);
    max-width: var(--media-chapters-thumbnail-max-width, 120px);
    max-height: var(--media-chapters-thumbnail-max-height, 68px);
}

:where(.vds-thumbnail img) {
    min-width: unset !important;
    max-width: unset !important;
    will-change: width, height, transform;
}

:where(.vds-thumbnail) {
    --aspect-ratio: calc(var(--media-thumbnail-aspect-ratio, 16 / 9));
    --min-width: var(--media-thumbnail-min-width, 140px);
    --max-width: var(--media-thumbnail-max-width, 180px);
    display: block;
    width: var(--thumbnail-width);
    height: var(--thumbnail-height);
    background-color: var(--media-thumbnail-bg, black);
    contain: strict;
    overflow: hidden;
    box-sizing: border-box;
    min-width: var(--min-width);
    min-height: var(--media-thumbnail-min-height, calc(var(--min-width) / var(--aspect-ratio)));
    max-width: var(--max-width);
    max-height: var(--media-thumbnail-max-height, calc(var(--max-width) / var(--aspect-ratio)));
}

:where(.vds-chapters-radio-group .vds-chapter-radio-label) {
    color: var(--media-chapters-label-color, rgb(245 245 245 / .64));
    font-size: var(--media-chapters-label-font-size, 15px);
    font-weight: var(--media-chapters-label-font-weight, 500);
    white-space: var(--media-chapters-label-white-space, nowrap);
}

:where(.vds-chapter-radio[aria-checked=true] .vds-chapter-radio-label) {
    color: var(--media-chapters-label-active-color, #f5f5f5);
    font-weight: var(--media-chapters-label-active-font-weight, 500);
}

@media (hover: hover) and (pointer: fine) {
    .vds-menu-items [role=menuitem]:hover,.vds-menu-items [role=menuitemradio]:hover {
        cursor:pointer;
        background-color: var(--media-menu-item-hover-bg, rgb(245 245 245 / .08))
    }
}